import { api } from "@/utils/api";
import {
  type InferGetStaticPropsType,
  type GetStaticPaths,
  type GetStaticProps,
  type NextPage,
} from "next";
import Head from "next/head";

import { createProxySSGHelpers } from "@trpc/react-query/ssg";
import { appRouter } from "@/server/api/root";
import { prisma } from "@/server/db";
import superjson from "superjson";
import { PageLayout } from "@/components/layout";
import Image from "next/image";

export const getStaticProps: GetStaticProps<{ username: string }> = async (
  context
) => {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: { prisma, userId: null },
    transformer: superjson,
  });

  const slug = context.params?.slug;

  if (typeof slug !== "string" || !slug) throw new Error("No slug");

  const username = slug.replace("@", "");

  await ssg.profiles.getUserByUsername.prefetch({ username });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    },
  };
};

export const getStaticPaths: GetStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};

type PageProps = InferGetStaticPropsType<typeof getStaticProps>;

const ProfilePage: NextPage<PageProps> = ({ username }) => {
  const { data } = api.profiles.getUserByUsername.useQuery({
    username,
  });

  if (!data) return <div>404</div>;

  return (
    <>
      <Head>
        <title>@{data.username} | Profile</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageLayout>
        <div className="relative h-36 border-slate-400 bg-slate-600">
          <Image
            src={data.profileImageUrl}
            alt={`${username}'s profile pic`}
            height={128}
            width={128}
            className="absolute bottom-0 left-0 ml-4 translate-y-1/2 rounded-full border-4 border-black bg-black"
          />
        </div>
        <div className="h-full w-full pt-16">
          <div className="p-4">
            <div className="text-2xl font-bold">{`@${username}`}</div>
          </div>
          <div className="w-full border-b border-slate-400" />
        </div>
      </PageLayout>
    </>
  );
};

export default ProfilePage;
